% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f_interface_predict.R
\name{predict.clv.fitted.spending}
\alias{predict.clv.fitted.spending}
\alias{predict,clv.gg}
\alias{predict,clv.fitted.spending-method}
\title{Predict customers' future spending}
\usage{
\method{predict}{clv.fitted.spending}(object, newdata = NULL, verbose = TRUE, ...)

\S4method{predict}{clv.fitted.spending}(object, newdata = NULL, verbose = TRUE, ...)
}
\arguments{
\item{object}{A fitted spending model for which prediction is desired.}

\item{newdata}{A clv.data object for which predictions should be made with the fitted model. If none or NULL is given, predictions are made for the data on which the model was fit.}

\item{verbose}{Show details about the running of the function.}

\item{...}{Ignored}
}
\value{
An object of class \code{data.table} with columns:
\item{Id}{The respective customer identifier}
\item{actual.spending}{Actual mean spending per transaction.}
\item{predicted.Spending}{The spending as predicted by the fitted spending model.}
}
\description{
Predict customer's future spending and compares it to actual spending, if there is a holdout period.
}
\details{
If \code{newdata} is provided, the individual customer statistics underlying the model are calculated
the same way as when the model was fit initially. Hence, if \code{remove.first.transaction} was \code{TRUE},
this will be applied to \code{newdata} as well.
}
\examples{
\donttest{
data("apparelTrans")

# Fit gg model on data
apparel.holdout <- clvdata(apparelTrans, time.unit="w",
                           estimation.split=37, date.format="ymd")
apparel.gg <- gg(apparel.holdout)

# Predict customers' future mean spending per transaction
predict(apparel.gg)

}

}
\seealso{
models to predict spending: \link{gg}.

models to predict transactions: \link{pnbd}, \link{bgnbd}, \link{ggomnbd}.
}
