name: testthat-tests
# Run tests for every PR and when commiting (push) to development or to the release branch
# pull_request: defaults to types [opened, synchronize, reopened]
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'release**'
      - 'development'

jobs:
  tests-ubuntu-latest:
    runs-on: ubuntu-latest
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: devtools

      - name: Run tests
        run: |
          library(testthat)
          library(devtools)

          # If on a release branch (name starts with 'release'),
          #   run all tests, including lengthy ones marked with skip_on_ci()
          if(grepl(pattern = "^release", x = Sys.getenv("GITHUB_HEAD_REF"))){
            Sys.setenv(CI="")
            print("On release branch: Run all tests")
          }else{
            print("Not on release branch: Dont run all tests (skip_on_ci())")
          }

          reporter <- RStudioReporter$new() # has to be defined outside capture.output to still print
          capture.output(devtools::test(reporter = reporter, stop_on_failure=TRUE, stop_on_warning=TRUE))
        shell: Rscript {0}
