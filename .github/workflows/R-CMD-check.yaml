name: R-CMD-check
on: push
# CMD checks on win, mac, ubuntu
jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: R-CMD-check-${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false # dont cancel if one fails, might have differen checks fail on different OS
      matrix:
        config:
          - {os: macOS-latest,   r: 'devel'}
          - {os: windows-latest, r: 'devel'}
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-16.04,   r: 'release', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
    env:
        R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
        RSPM: ${{ matrix.config.rspm }}

    steps:
        - uses: actions/checkout@v2
        - uses: r-lib/actions/setup-r@master
          with:
            r-version: ${{ matrix.config.r }}
        - name: Query dependencies
          run: |
            install.packages('remotes')
            saveRDS(remotes::dev_package_deps(dependencies = TRUE), "depends.Rds", version = 2)
          shell: Rscript {0}

        - name: Cache R packages
          if: runner.os != 'Windows'
          uses: actions/cache@v1
          with:
            path: ${{ env.R_LIBS_USER }}
            key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
            restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

        - name: Install system dependencies
          if: runner.os == 'Linux'
          env:
            RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
          run: |
            Rscript -e "remotes::install_github('r-hub/sysreqs')"
            sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
            sudo -s eval "$sysreqs"
            sudo apt-get install -y qpdf # qpdf needed on ubuntu
            sudo apt-get install texlive-xetex # for tinytex

        - name: Install tinytex for linux (to build vignettes)
          if: runner.os == 'Linux'
          run: |
            install.packages('tinytex')
            tinytex::install_tinytex()
          shell: Rscript {0}

        - name: Install gsl for mac
          if: runner.os == 'macOS'
          run: |
            brew install gsl

        - name: Install package dependencies
          run: |
            remotes::install_deps(dependencies = TRUE)
            # remotes::install_cran(c("RcppGSL", "stringi"), repos = "https://cran.rstudio.com")
            remotes::install_cran("rcmdcheck", repos = "https://cran.rstudio.com")
            # remove because leads to NOTE. Does not exist on windows
            if(file.exists('depends.Rds')) {file.remove('depends.Rds')}
          shell: Rscript {0}

        - name: Check on Mac / ubuntu
          if: runner.os != 'Windows'
          run: rcmdcheck::rcmdcheck(args = c("--no-tests", "--as-cran", "--no-manual"), error_on = "warning", check_dir = "check")
          shell: Rscript {0}

        - name: Check on Windows, without install and vignette
          if: runner.os == 'Windows'
          run: rcmdcheck::rcmdcheck(args = c("--no-install", "--no-build-vignettes","--no-vignettes","--ignore-vignettes","--no-tests", "--as-cran", "--no-manual"), build_args = c("--no-build-vignettes"), error_on = "warning", check_dir = "check")
          shell: Rscript {0}
