// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// bgnbd_nocov_CET
arma::vec bgnbd_nocov_CET(const double r, const double alpha, const double a, const double b, const double dPeriods, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_bgnbd_nocov_CET(SEXP rSEXP, SEXP alphaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP dPeriodsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type dPeriods(dPeriodsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_nocov_CET(r, alpha, a, b, dPeriods, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_staticcov_CET
arma::vec bgnbd_staticcov_CET(const double r, const double alpha, const double a, const double b, const double dPeriods, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::vec& vCovParams_trans, const arma::vec& vCovParams_life, const arma::mat& mCov_trans, const arma::mat& mCov_life);
RcppExport SEXP _CLVTools_bgnbd_staticcov_CET(SEXP rSEXP, SEXP alphaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP dPeriodsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP vCovParams_transSEXP, SEXP vCovParams_lifeSEXP, SEXP mCov_transSEXP, SEXP mCov_lifeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type dPeriods(dPeriodsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_trans(vCovParams_transSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_life(vCovParams_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_staticcov_CET(r, alpha, a, b, dPeriods, vX, vT_x, vT_cal, vCovParams_trans, vCovParams_life, mCov_trans, mCov_life));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_nocov_expectation
arma::vec bgnbd_nocov_expectation(const double r, const double alpha, const double a, const double b, const arma::vec& vT_i);
RcppExport SEXP _CLVTools_bgnbd_nocov_expectation(SEXP rSEXP, SEXP alphaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP vT_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_i(vT_iSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_nocov_expectation(r, alpha, a, b, vT_i));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_staticcov_expectation
arma::vec bgnbd_staticcov_expectation(const double r, const arma::vec& vAlpha_i, const arma::vec& vA_i, const arma::vec& vB_i, const arma::vec& vT_i);
RcppExport SEXP _CLVTools_bgnbd_staticcov_expectation(SEXP rSEXP, SEXP vAlpha_iSEXP, SEXP vA_iSEXP, SEXP vB_iSEXP, SEXP vT_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vAlpha_i(vAlpha_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vA_i(vA_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vB_i(vB_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_i(vT_iSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_staticcov_expectation(r, vAlpha_i, vA_i, vB_i, vT_i));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_nocov_PAlive
arma::vec bgnbd_nocov_PAlive(const double r, const double alpha, const double a, const double b, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_bgnbd_nocov_PAlive(SEXP rSEXP, SEXP alphaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_nocov_PAlive(r, alpha, a, b, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_staticcov_PAlive
arma::vec bgnbd_staticcov_PAlive(const double r, const double alpha, const double a, const double b, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::vec& vCovParams_trans, const arma::vec& vCovParams_life, const arma::mat& mCov_trans, const arma::mat& mCov_life);
RcppExport SEXP _CLVTools_bgnbd_staticcov_PAlive(SEXP rSEXP, SEXP alphaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP vCovParams_transSEXP, SEXP vCovParams_lifeSEXP, SEXP mCov_transSEXP, SEXP mCov_lifeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_trans(vCovParams_transSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_life(vCovParams_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_staticcov_PAlive(r, alpha, a, b, vX, vT_x, vT_cal, vCovParams_trans, vCovParams_life, mCov_trans, mCov_life));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_nocov_LL_ind
arma::vec bgnbd_nocov_LL_ind(const arma::vec& vLogparams, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_bgnbd_nocov_LL_ind(SEXP vLogparamsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vLogparams(vLogparamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_nocov_LL_ind(vLogparams, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_nocov_LL_sum
double bgnbd_nocov_LL_sum(const arma::vec& vLogparams, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_bgnbd_nocov_LL_sum(SEXP vLogparamsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vLogparams(vLogparamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_nocov_LL_sum(vLogparams, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_staticcov_LL_ind
arma::vec bgnbd_staticcov_LL_ind(const arma::vec& vParams, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::mat& mCov_life, const arma::mat& mCov_trans);
RcppExport SEXP _CLVTools_bgnbd_staticcov_LL_ind(SEXP vParamsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP mCov_lifeSEXP, SEXP mCov_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vParams(vParamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_staticcov_LL_ind(vParams, vX, vT_x, vT_cal, mCov_life, mCov_trans));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_staticcov_LL_sum
double bgnbd_staticcov_LL_sum(const arma::vec& vParams, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::mat& mCov_life, const arma::mat& mCov_trans);
RcppExport SEXP _CLVTools_bgnbd_staticcov_LL_sum(SEXP vParamsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP mCov_lifeSEXP, SEXP mCov_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vParams(vParamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_staticcov_LL_sum(vParams, vX, vT_x, vT_cal, mCov_life, mCov_trans));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_nocov_PMF
arma::vec bgnbd_nocov_PMF(const double r, const double alpha, const double a, const double b, const unsigned int x, const arma::vec& vT_i);
RcppExport SEXP _CLVTools_bgnbd_nocov_PMF(SEXP rSEXP, SEXP alphaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP xSEXP, SEXP vT_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_i(vT_iSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_nocov_PMF(r, alpha, a, b, x, vT_i));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_staticcov_PMF
arma::vec bgnbd_staticcov_PMF(const double r, const unsigned int x, const arma::vec& vAlpha_i, const arma::vec& vA_i, const arma::vec& vB_i, const arma::vec& vT_i);
RcppExport SEXP _CLVTools_bgnbd_staticcov_PMF(SEXP rSEXP, SEXP xSEXP, SEXP vAlpha_iSEXP, SEXP vA_iSEXP, SEXP vB_iSEXP, SEXP vT_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vAlpha_i(vAlpha_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vA_i(vA_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vB_i(vB_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_i(vT_iSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_staticcov_PMF(r, x, vAlpha_i, vA_i, vB_i, vT_i));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_staticcov_alpha_i
arma::vec bgnbd_staticcov_alpha_i(const double alpha_0, const arma::vec& vCovParams_trans, const arma::mat& mCov_trans);
RcppExport SEXP _CLVTools_bgnbd_staticcov_alpha_i(SEXP alpha_0SEXP, SEXP vCovParams_transSEXP, SEXP mCov_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_trans(vCovParams_transSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_staticcov_alpha_i(alpha_0, vCovParams_trans, mCov_trans));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_staticcov_a_i
arma::vec bgnbd_staticcov_a_i(const double a_0, const arma::vec& vCovParams_life, const arma::mat& mCov_life);
RcppExport SEXP _CLVTools_bgnbd_staticcov_a_i(SEXP a_0SEXP, SEXP vCovParams_lifeSEXP, SEXP mCov_lifeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type a_0(a_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_life(vCovParams_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_staticcov_a_i(a_0, vCovParams_life, mCov_life));
    return rcpp_result_gen;
END_RCPP
}
// bgnbd_staticcov_b_i
arma::vec bgnbd_staticcov_b_i(const double b_0, const arma::vec& vCovParams_life, const arma::mat& mCov_life);
RcppExport SEXP _CLVTools_bgnbd_staticcov_b_i(SEXP b_0SEXP, SEXP vCovParams_lifeSEXP, SEXP mCov_lifeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type b_0(b_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_life(vCovParams_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    rcpp_result_gen = Rcpp::wrap(bgnbd_staticcov_b_i(b_0, vCovParams_life, mCov_life));
    return rcpp_result_gen;
END_RCPP
}
// vec_gsl_hyp2f0_e
Rcpp::List vec_gsl_hyp2f0_e(const RcppGSL::Vector& vA, const RcppGSL::Vector& vB, const RcppGSL::Vector& vZ);
RcppExport SEXP _CLVTools_vec_gsl_hyp2f0_e(SEXP vASEXP, SEXP vBSEXP, SEXP vZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const RcppGSL::Vector& >::type vA(vASEXP);
    Rcpp::traits::input_parameter< const RcppGSL::Vector& >::type vB(vBSEXP);
    Rcpp::traits::input_parameter< const RcppGSL::Vector& >::type vZ(vZSEXP);
    rcpp_result_gen = Rcpp::wrap(vec_gsl_hyp2f0_e(vA, vB, vZ));
    return rcpp_result_gen;
END_RCPP
}
// vec_gsl_hyp2f1_e
Rcpp::List vec_gsl_hyp2f1_e(const RcppGSL::Vector& vA, const RcppGSL::Vector& vB, const RcppGSL::Vector& vC, const RcppGSL::Vector& vZ);
RcppExport SEXP _CLVTools_vec_gsl_hyp2f1_e(SEXP vASEXP, SEXP vBSEXP, SEXP vCSEXP, SEXP vZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const RcppGSL::Vector& >::type vA(vASEXP);
    Rcpp::traits::input_parameter< const RcppGSL::Vector& >::type vB(vBSEXP);
    Rcpp::traits::input_parameter< const RcppGSL::Vector& >::type vC(vCSEXP);
    Rcpp::traits::input_parameter< const RcppGSL::Vector& >::type vZ(vZSEXP);
    rcpp_result_gen = Rcpp::wrap(vec_gsl_hyp2f1_e(vA, vB, vC, vZ));
    return rcpp_result_gen;
END_RCPP
}
// gg_LL
double gg_LL(const arma::vec& vLogparams, const arma::vec& vX, const arma::vec& vM_x);
RcppExport SEXP _CLVTools_gg_LL(SEXP vLogparamsSEXP, SEXP vXSEXP, SEXP vM_xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vLogparams(vLogparamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vM_x(vM_xSEXP);
    rcpp_result_gen = Rcpp::wrap(gg_LL(vLogparams, vX, vM_x));
    return rcpp_result_gen;
END_RCPP
}
// ggomnbd_nocov_CET
arma::vec ggomnbd_nocov_CET(const double r, const double alpha_0, const double b, const double s, const double beta_0, const double dPeriods, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_ggomnbd_nocov_CET(SEXP rSEXP, SEXP alpha_0SEXP, SEXP bSEXP, SEXP sSEXP, SEXP beta_0SEXP, SEXP dPeriodsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const double >::type dPeriods(dPeriodsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(ggomnbd_nocov_CET(r, alpha_0, b, s, beta_0, dPeriods, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// ggomnbd_staticcov_CET
arma::vec ggomnbd_staticcov_CET(const double r, const double alpha_0, const double b, const double s, const double beta_0, const double dPeriods, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::vec& vCovParams_trans, const arma::vec& vCovParams_life, const arma::mat& mCov_life, const arma::mat& mCov_trans);
RcppExport SEXP _CLVTools_ggomnbd_staticcov_CET(SEXP rSEXP, SEXP alpha_0SEXP, SEXP bSEXP, SEXP sSEXP, SEXP beta_0SEXP, SEXP dPeriodsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP vCovParams_transSEXP, SEXP vCovParams_lifeSEXP, SEXP mCov_lifeSEXP, SEXP mCov_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const double >::type dPeriods(dPeriodsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_trans(vCovParams_transSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_life(vCovParams_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    rcpp_result_gen = Rcpp::wrap(ggomnbd_staticcov_CET(r, alpha_0, b, s, beta_0, dPeriods, vX, vT_x, vT_cal, vCovParams_trans, vCovParams_life, mCov_life, mCov_trans));
    return rcpp_result_gen;
END_RCPP
}
// ggomnbd_nocov_expectation
arma::vec ggomnbd_nocov_expectation(const double r, const double alpha_0, const double b, const double s, const double beta_0, const arma::vec& vT_i);
RcppExport SEXP _CLVTools_ggomnbd_nocov_expectation(SEXP rSEXP, SEXP alpha_0SEXP, SEXP bSEXP, SEXP sSEXP, SEXP beta_0SEXP, SEXP vT_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_i(vT_iSEXP);
    rcpp_result_gen = Rcpp::wrap(ggomnbd_nocov_expectation(r, alpha_0, b, s, beta_0, vT_i));
    return rcpp_result_gen;
END_RCPP
}
// ggomnbd_staticcov_expectation
arma::vec ggomnbd_staticcov_expectation(const double r, const double b, const double s, const arma::vec& vAlpha_i, const arma::vec& vBeta_i, const arma::vec& vT_i);
RcppExport SEXP _CLVTools_ggomnbd_staticcov_expectation(SEXP rSEXP, SEXP bSEXP, SEXP sSEXP, SEXP vAlpha_iSEXP, SEXP vBeta_iSEXP, SEXP vT_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vAlpha_i(vAlpha_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vBeta_i(vBeta_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_i(vT_iSEXP);
    rcpp_result_gen = Rcpp::wrap(ggomnbd_staticcov_expectation(r, b, s, vAlpha_i, vBeta_i, vT_i));
    return rcpp_result_gen;
END_RCPP
}
// ggomnbd_nocov_LL_ind
arma::vec ggomnbd_nocov_LL_ind(const arma::vec& vLogparams, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_ggomnbd_nocov_LL_ind(SEXP vLogparamsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vLogparams(vLogparamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(ggomnbd_nocov_LL_ind(vLogparams, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// ggomnbd_nocov_LL_sum
double ggomnbd_nocov_LL_sum(const arma::vec& vLogparams, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_ggomnbd_nocov_LL_sum(SEXP vLogparamsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vLogparams(vLogparamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(ggomnbd_nocov_LL_sum(vLogparams, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// ggomnbd_staticcov_LL_ind
arma::vec ggomnbd_staticcov_LL_ind(const arma::vec& vParams, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::mat& mCov_life, const arma::mat& mCov_trans);
RcppExport SEXP _CLVTools_ggomnbd_staticcov_LL_ind(SEXP vParamsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP mCov_lifeSEXP, SEXP mCov_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vParams(vParamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    rcpp_result_gen = Rcpp::wrap(ggomnbd_staticcov_LL_ind(vParams, vX, vT_x, vT_cal, mCov_life, mCov_trans));
    return rcpp_result_gen;
END_RCPP
}
// ggomnbd_staticcov_LL_sum
double ggomnbd_staticcov_LL_sum(const arma::vec& vParams, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::mat& mCov_life, const arma::mat& mCov_trans);
RcppExport SEXP _CLVTools_ggomnbd_staticcov_LL_sum(SEXP vParamsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP mCov_lifeSEXP, SEXP mCov_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vParams(vParamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    rcpp_result_gen = Rcpp::wrap(ggomnbd_staticcov_LL_sum(vParams, vX, vT_x, vT_cal, mCov_life, mCov_trans));
    return rcpp_result_gen;
END_RCPP
}
// ggomnbd_staticcov_alpha_i
arma::vec ggomnbd_staticcov_alpha_i(const double alpha_0, const arma::vec& vCovParams_trans, const arma::mat& mCov_trans);
RcppExport SEXP _CLVTools_ggomnbd_staticcov_alpha_i(SEXP alpha_0SEXP, SEXP vCovParams_transSEXP, SEXP mCov_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_trans(vCovParams_transSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    rcpp_result_gen = Rcpp::wrap(ggomnbd_staticcov_alpha_i(alpha_0, vCovParams_trans, mCov_trans));
    return rcpp_result_gen;
END_RCPP
}
// ggomnbd_staticcov_beta_i
arma::vec ggomnbd_staticcov_beta_i(const double beta_0, const arma::vec& vCovParams_life, const arma::mat& mCov_life);
RcppExport SEXP _CLVTools_ggomnbd_staticcov_beta_i(SEXP beta_0SEXP, SEXP vCovParams_lifeSEXP, SEXP mCov_lifeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_life(vCovParams_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    rcpp_result_gen = Rcpp::wrap(ggomnbd_staticcov_beta_i(beta_0, vCovParams_life, mCov_life));
    return rcpp_result_gen;
END_RCPP
}
// ggomnbd_staticcov_PAlive
arma::vec ggomnbd_staticcov_PAlive(const double r, const double alpha_0, const double b, const double s, const double beta_0, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::vec& vCovParams_trans, const arma::vec& vCovParams_life, const arma::mat& mCov_life, const arma::mat& mCov_trans);
RcppExport SEXP _CLVTools_ggomnbd_staticcov_PAlive(SEXP rSEXP, SEXP alpha_0SEXP, SEXP bSEXP, SEXP sSEXP, SEXP beta_0SEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP vCovParams_transSEXP, SEXP vCovParams_lifeSEXP, SEXP mCov_lifeSEXP, SEXP mCov_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_trans(vCovParams_transSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_life(vCovParams_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    rcpp_result_gen = Rcpp::wrap(ggomnbd_staticcov_PAlive(r, alpha_0, b, s, beta_0, vX, vT_x, vT_cal, vCovParams_trans, vCovParams_life, mCov_life, mCov_trans));
    return rcpp_result_gen;
END_RCPP
}
// ggomnbd_nocov_PAlive
arma::vec ggomnbd_nocov_PAlive(const double r, const double alpha_0, const double b, const double s, const double beta_0, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_ggomnbd_nocov_PAlive(SEXP rSEXP, SEXP alpha_0SEXP, SEXP bSEXP, SEXP sSEXP, SEXP beta_0SEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(ggomnbd_nocov_PAlive(r, alpha_0, b, s, beta_0, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_nocov_CET
arma::vec pnbd_nocov_CET(const double r, const double alpha_0, const double s, const double beta_0, const double dPeriods, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_pnbd_nocov_CET(SEXP rSEXP, SEXP alpha_0SEXP, SEXP sSEXP, SEXP beta_0SEXP, SEXP dPeriodsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const double >::type dPeriods(dPeriodsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_nocov_CET(r, alpha_0, s, beta_0, dPeriods, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_staticcov_CET
arma::vec pnbd_staticcov_CET(const double r, const double alpha_0, const double s, const double beta_0, const double dPeriods, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::vec& vCovParams_trans, const arma::vec& vCovParams_life, const arma::mat& mCov_trans, const arma::mat& mCov_life);
RcppExport SEXP _CLVTools_pnbd_staticcov_CET(SEXP rSEXP, SEXP alpha_0SEXP, SEXP sSEXP, SEXP beta_0SEXP, SEXP dPeriodsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP vCovParams_transSEXP, SEXP vCovParams_lifeSEXP, SEXP mCov_transSEXP, SEXP mCov_lifeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const double >::type dPeriods(dPeriodsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_trans(vCovParams_transSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_life(vCovParams_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_staticcov_CET(r, alpha_0, s, beta_0, dPeriods, vX, vT_x, vT_cal, vCovParams_trans, vCovParams_life, mCov_trans, mCov_life));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_nocov_DERT
arma::vec pnbd_nocov_DERT(const double r, const double alpha_0, const double s, const double beta_0, const double continuous_discount_factor, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_pnbd_nocov_DERT(SEXP rSEXP, SEXP alpha_0SEXP, SEXP sSEXP, SEXP beta_0SEXP, SEXP continuous_discount_factorSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const double >::type continuous_discount_factor(continuous_discount_factorSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_nocov_DERT(r, alpha_0, s, beta_0, continuous_discount_factor, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_staticcov_DERT
arma::vec pnbd_staticcov_DERT(const double r, const double alpha_0, const double s, const double beta_0, const double continuous_discount_factor, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::mat& mCov_life, const arma::mat& mCov_trans, const arma::vec& vCovParams_life, const arma::vec& vCovParams_trans);
RcppExport SEXP _CLVTools_pnbd_staticcov_DERT(SEXP rSEXP, SEXP alpha_0SEXP, SEXP sSEXP, SEXP beta_0SEXP, SEXP continuous_discount_factorSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP mCov_lifeSEXP, SEXP mCov_transSEXP, SEXP vCovParams_lifeSEXP, SEXP vCovParams_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const double >::type continuous_discount_factor(continuous_discount_factorSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_life(vCovParams_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_trans(vCovParams_transSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_staticcov_DERT(r, alpha_0, s, beta_0, continuous_discount_factor, vX, vT_x, vT_cal, mCov_life, mCov_trans, vCovParams_life, vCovParams_trans));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_nocov_expectation
arma::vec pnbd_nocov_expectation(const double r, const double s, const double alpha_0, const double beta_0, const arma::vec& vT_i);
RcppExport SEXP _CLVTools_pnbd_nocov_expectation(SEXP rSEXP, SEXP sSEXP, SEXP alpha_0SEXP, SEXP beta_0SEXP, SEXP vT_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_i(vT_iSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_nocov_expectation(r, s, alpha_0, beta_0, vT_i));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_staticcov_expectation
arma::vec pnbd_staticcov_expectation(const double r, const double s, const arma::vec& vAlpha_i, const arma::vec& vBeta_i, const arma::vec& vT_i);
RcppExport SEXP _CLVTools_pnbd_staticcov_expectation(SEXP rSEXP, SEXP sSEXP, SEXP vAlpha_iSEXP, SEXP vBeta_iSEXP, SEXP vT_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vAlpha_i(vAlpha_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vBeta_i(vBeta_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_i(vT_iSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_staticcov_expectation(r, s, vAlpha_i, vBeta_i, vT_i));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_nocov_LL_ind
arma::vec pnbd_nocov_LL_ind(const arma::vec& vLogparams, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_pnbd_nocov_LL_ind(SEXP vLogparamsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vLogparams(vLogparamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_nocov_LL_ind(vLogparams, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_nocov_LL_sum
double pnbd_nocov_LL_sum(const arma::vec& vLogparams, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_pnbd_nocov_LL_sum(SEXP vLogparamsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vLogparams(vLogparamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_nocov_LL_sum(vLogparams, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_staticcov_LL_ind
arma::vec pnbd_staticcov_LL_ind(const arma::vec& vParams, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::mat& mCov_life, const arma::mat& mCov_trans);
RcppExport SEXP _CLVTools_pnbd_staticcov_LL_ind(SEXP vParamsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP mCov_lifeSEXP, SEXP mCov_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vParams(vParamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_staticcov_LL_ind(vParams, vX, vT_x, vT_cal, mCov_life, mCov_trans));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_staticcov_LL_sum
double pnbd_staticcov_LL_sum(const arma::vec& vParams, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::mat& mCov_life, const arma::mat& mCov_trans);
RcppExport SEXP _CLVTools_pnbd_staticcov_LL_sum(SEXP vParamsSEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP mCov_lifeSEXP, SEXP mCov_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type vParams(vParamsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_staticcov_LL_sum(vParams, vX, vT_x, vT_cal, mCov_life, mCov_trans));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_staticcov_alpha_i
arma::vec pnbd_staticcov_alpha_i(const double alpha_0, const arma::vec& vCovParams_trans, const arma::mat& mCov_trans);
RcppExport SEXP _CLVTools_pnbd_staticcov_alpha_i(SEXP alpha_0SEXP, SEXP vCovParams_transSEXP, SEXP mCov_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_trans(vCovParams_transSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_staticcov_alpha_i(alpha_0, vCovParams_trans, mCov_trans));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_staticcov_beta_i
arma::vec pnbd_staticcov_beta_i(const double beta_0, const arma::vec& vCovParams_life, const arma::mat& mCov_life);
RcppExport SEXP _CLVTools_pnbd_staticcov_beta_i(SEXP beta_0SEXP, SEXP vCovParams_lifeSEXP, SEXP mCov_lifeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_life(vCovParams_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_staticcov_beta_i(beta_0, vCovParams_life, mCov_life));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_nocov_PAlive
arma::vec pnbd_nocov_PAlive(const double r, const double alpha_0, const double s, const double beta_0, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal);
RcppExport SEXP _CLVTools_pnbd_nocov_PAlive(SEXP rSEXP, SEXP alpha_0SEXP, SEXP sSEXP, SEXP beta_0SEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_nocov_PAlive(r, alpha_0, s, beta_0, vX, vT_x, vT_cal));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_staticcov_PAlive
arma::vec pnbd_staticcov_PAlive(const double r, const double alpha_0, const double s, const double beta_0, const arma::vec& vX, const arma::vec& vT_x, const arma::vec& vT_cal, const arma::vec& vCovParams_trans, const arma::vec& vCovParams_life, const arma::mat& mCov_trans, const arma::mat& mCov_life);
RcppExport SEXP _CLVTools_pnbd_staticcov_PAlive(SEXP rSEXP, SEXP alpha_0SEXP, SEXP sSEXP, SEXP beta_0SEXP, SEXP vXSEXP, SEXP vT_xSEXP, SEXP vT_calSEXP, SEXP vCovParams_transSEXP, SEXP vCovParams_lifeSEXP, SEXP mCov_transSEXP, SEXP mCov_lifeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_x(vT_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_cal(vT_calSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_trans(vCovParams_transSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vCovParams_life(vCovParams_lifeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_trans(mCov_transSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mCov_life(mCov_lifeSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_staticcov_PAlive(r, alpha_0, s, beta_0, vX, vT_x, vT_cal, vCovParams_trans, vCovParams_life, mCov_trans, mCov_life));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_nocov_PMF
arma::vec pnbd_nocov_PMF(const double r, const double alpha_0, const double s, const double beta_0, const unsigned int x, const arma::vec& vT_i);
RcppExport SEXP _CLVTools_pnbd_nocov_PMF(SEXP rSEXP, SEXP alpha_0SEXP, SEXP sSEXP, SEXP beta_0SEXP, SEXP xSEXP, SEXP vT_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_i(vT_iSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_nocov_PMF(r, alpha_0, s, beta_0, x, vT_i));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_staticcov_PMF
arma::vec pnbd_staticcov_PMF(const double r, const double s, const unsigned int x, const arma::vec& vAlpha_i, const arma::vec& vBeta_i, const arma::vec& vT_i);
RcppExport SEXP _CLVTools_pnbd_staticcov_PMF(SEXP rSEXP, SEXP sSEXP, SEXP xSEXP, SEXP vAlpha_iSEXP, SEXP vBeta_iSEXP, SEXP vT_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vAlpha_i(vAlpha_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vBeta_i(vBeta_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vT_i(vT_iSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_staticcov_PMF(r, s, x, vAlpha_i, vBeta_i, vT_i));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_dyncov_LL_Bi_cpp
arma::vec pnbd_dyncov_LL_Bi_cpp(const int i, const arma::vec& t_x, const arma::vec& d, const arma::vec& delta, const arma::ivec& n_walks, const arma::vec& max_walks, const arma::mat& walks);
RcppExport SEXP _CLVTools_pnbd_dyncov_LL_Bi_cpp(SEXP iSEXP, SEXP t_xSEXP, SEXP dSEXP, SEXP deltaSEXP, SEXP n_walksSEXP, SEXP max_walksSEXP, SEXP walksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type i(iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type t_x(t_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type n_walks(n_walksSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type max_walks(max_walksSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type walks(walksSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_dyncov_LL_Bi_cpp(i, t_x, d, delta, n_walks, max_walks, walks));
    return rcpp_result_gen;
END_RCPP
}
// pnbd_dyncov_LL_Di_cpp
arma::vec pnbd_dyncov_LL_Di_cpp(const int i, const arma::vec& real_d, const arma::vec& aux_d, const arma::ivec& real_n_walks, const arma::ivec& aux_n_walks, const arma::vec& real_max_walks, const arma::vec& aux_max_walks, const arma::vec& real_adj_walk1, const arma::mat& real_walks, const arma::mat& aux_walks);
RcppExport SEXP _CLVTools_pnbd_dyncov_LL_Di_cpp(SEXP iSEXP, SEXP real_dSEXP, SEXP aux_dSEXP, SEXP real_n_walksSEXP, SEXP aux_n_walksSEXP, SEXP real_max_walksSEXP, SEXP aux_max_walksSEXP, SEXP real_adj_walk1SEXP, SEXP real_walksSEXP, SEXP aux_walksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type i(iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type real_d(real_dSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type aux_d(aux_dSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type real_n_walks(real_n_walksSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type aux_n_walks(aux_n_walksSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type real_max_walks(real_max_walksSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type aux_max_walks(aux_max_walksSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type real_adj_walk1(real_adj_walk1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type real_walks(real_walksSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type aux_walks(aux_walksSEXP);
    rcpp_result_gen = Rcpp::wrap(pnbd_dyncov_LL_Di_cpp(i, real_d, aux_d, real_n_walks, aux_n_walks, real_max_walks, aux_max_walks, real_adj_walk1, real_walks, aux_walks));
    return rcpp_result_gen;
END_RCPP
}
// hyp_alpha_ge_beta_cpp
arma::vec hyp_alpha_ge_beta_cpp(const arma::vec& alpha_1, const arma::vec& beta_1, const arma::vec& alpha_2, const arma::vec& beta_2, const arma::vec& x, const double r, const double s);
RcppExport SEXP _CLVTools_hyp_alpha_ge_beta_cpp(SEXP alpha_1SEXP, SEXP beta_1SEXP, SEXP alpha_2SEXP, SEXP beta_2SEXP, SEXP xSEXP, SEXP rSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_1(alpha_1SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_1(beta_1SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_2(alpha_2SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_2(beta_2SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(hyp_alpha_ge_beta_cpp(alpha_1, beta_1, alpha_2, beta_2, x, r, s));
    return rcpp_result_gen;
END_RCPP
}
// hyp_beta_g_alpha_cpp
arma::vec hyp_beta_g_alpha_cpp(const arma::vec& alpha_1, const arma::vec& beta_1, const arma::vec& alpha_2, const arma::vec& beta_2, const arma::vec& x, const double r, const double s);
RcppExport SEXP _CLVTools_hyp_beta_g_alpha_cpp(SEXP alpha_1SEXP, SEXP beta_1SEXP, SEXP alpha_2SEXP, SEXP beta_2SEXP, SEXP xSEXP, SEXP rSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_1(alpha_1SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_1(beta_1SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_2(alpha_2SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_2(beta_2SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(hyp_beta_g_alpha_cpp(alpha_1, beta_1, alpha_2, beta_2, x, r, s));
    return rcpp_result_gen;
END_RCPP
}
// F2_3_vecs_cpp
arma::vec F2_3_vecs_cpp(const arma::ivec& n_walks_cbs, const arma::vec& dT_cbs, const arma::vec& Bjsum_cbs, const arma::vec& x_cbs, const arma::vec& t_x_cbs, const arma::ivec& n_walks_trans, const arma::mat& walks_trans, const arma::vec& d_trans, const arma::vec& delta_trans, const arma::vec& max_walks_trans, const arma::ivec& n_walks_life_real, const arma::vec& d_life_real, const arma::vec& max_walks_life_real, const arma::vec& adj_walk1_life_real, const arma::mat& walks_life_real, const arma::ivec& n_walks_life_aux, const arma::vec& d_life_aux, const arma::vec& max_walks_life_aux, const arma::mat& walks_life_aux, const double r, const double alpha, const double s, const double beta);
RcppExport SEXP _CLVTools_F2_3_vecs_cpp(SEXP n_walks_cbsSEXP, SEXP dT_cbsSEXP, SEXP Bjsum_cbsSEXP, SEXP x_cbsSEXP, SEXP t_x_cbsSEXP, SEXP n_walks_transSEXP, SEXP walks_transSEXP, SEXP d_transSEXP, SEXP delta_transSEXP, SEXP max_walks_transSEXP, SEXP n_walks_life_realSEXP, SEXP d_life_realSEXP, SEXP max_walks_life_realSEXP, SEXP adj_walk1_life_realSEXP, SEXP walks_life_realSEXP, SEXP n_walks_life_auxSEXP, SEXP d_life_auxSEXP, SEXP max_walks_life_auxSEXP, SEXP walks_life_auxSEXP, SEXP rSEXP, SEXP alphaSEXP, SEXP sSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::ivec& >::type n_walks_cbs(n_walks_cbsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type dT_cbs(dT_cbsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Bjsum_cbs(Bjsum_cbsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type x_cbs(x_cbsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type t_x_cbs(t_x_cbsSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type n_walks_trans(n_walks_transSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type walks_trans(walks_transSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type d_trans(d_transSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type delta_trans(delta_transSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type max_walks_trans(max_walks_transSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type n_walks_life_real(n_walks_life_realSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type d_life_real(d_life_realSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type max_walks_life_real(max_walks_life_realSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type adj_walk1_life_real(adj_walk1_life_realSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type walks_life_real(walks_life_realSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type n_walks_life_aux(n_walks_life_auxSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type d_life_aux(d_life_auxSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type max_walks_life_aux(max_walks_life_auxSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type walks_life_aux(walks_life_auxSEXP);
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type s(sSEXP);
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(F2_3_vecs_cpp(n_walks_cbs, dT_cbs, Bjsum_cbs, x_cbs, t_x_cbs, n_walks_trans, walks_trans, d_trans, delta_trans, max_walks_trans, n_walks_life_real, d_life_real, max_walks_life_real, adj_walk1_life_real, walks_life_real, n_walks_life_aux, d_life_aux, max_walks_life_aux, walks_life_aux, r, alpha, s, beta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CLVTools_bgnbd_nocov_CET", (DL_FUNC) &_CLVTools_bgnbd_nocov_CET, 8},
    {"_CLVTools_bgnbd_staticcov_CET", (DL_FUNC) &_CLVTools_bgnbd_staticcov_CET, 12},
    {"_CLVTools_bgnbd_nocov_expectation", (DL_FUNC) &_CLVTools_bgnbd_nocov_expectation, 5},
    {"_CLVTools_bgnbd_staticcov_expectation", (DL_FUNC) &_CLVTools_bgnbd_staticcov_expectation, 5},
    {"_CLVTools_bgnbd_nocov_PAlive", (DL_FUNC) &_CLVTools_bgnbd_nocov_PAlive, 7},
    {"_CLVTools_bgnbd_staticcov_PAlive", (DL_FUNC) &_CLVTools_bgnbd_staticcov_PAlive, 11},
    {"_CLVTools_bgnbd_nocov_LL_ind", (DL_FUNC) &_CLVTools_bgnbd_nocov_LL_ind, 4},
    {"_CLVTools_bgnbd_nocov_LL_sum", (DL_FUNC) &_CLVTools_bgnbd_nocov_LL_sum, 4},
    {"_CLVTools_bgnbd_staticcov_LL_ind", (DL_FUNC) &_CLVTools_bgnbd_staticcov_LL_ind, 6},
    {"_CLVTools_bgnbd_staticcov_LL_sum", (DL_FUNC) &_CLVTools_bgnbd_staticcov_LL_sum, 6},
    {"_CLVTools_bgnbd_nocov_PMF", (DL_FUNC) &_CLVTools_bgnbd_nocov_PMF, 6},
    {"_CLVTools_bgnbd_staticcov_PMF", (DL_FUNC) &_CLVTools_bgnbd_staticcov_PMF, 6},
    {"_CLVTools_bgnbd_staticcov_alpha_i", (DL_FUNC) &_CLVTools_bgnbd_staticcov_alpha_i, 3},
    {"_CLVTools_bgnbd_staticcov_a_i", (DL_FUNC) &_CLVTools_bgnbd_staticcov_a_i, 3},
    {"_CLVTools_bgnbd_staticcov_b_i", (DL_FUNC) &_CLVTools_bgnbd_staticcov_b_i, 3},
    {"_CLVTools_vec_gsl_hyp2f0_e", (DL_FUNC) &_CLVTools_vec_gsl_hyp2f0_e, 3},
    {"_CLVTools_vec_gsl_hyp2f1_e", (DL_FUNC) &_CLVTools_vec_gsl_hyp2f1_e, 4},
    {"_CLVTools_gg_LL", (DL_FUNC) &_CLVTools_gg_LL, 3},
    {"_CLVTools_ggomnbd_nocov_CET", (DL_FUNC) &_CLVTools_ggomnbd_nocov_CET, 9},
    {"_CLVTools_ggomnbd_staticcov_CET", (DL_FUNC) &_CLVTools_ggomnbd_staticcov_CET, 13},
    {"_CLVTools_ggomnbd_nocov_expectation", (DL_FUNC) &_CLVTools_ggomnbd_nocov_expectation, 6},
    {"_CLVTools_ggomnbd_staticcov_expectation", (DL_FUNC) &_CLVTools_ggomnbd_staticcov_expectation, 6},
    {"_CLVTools_ggomnbd_nocov_LL_ind", (DL_FUNC) &_CLVTools_ggomnbd_nocov_LL_ind, 4},
    {"_CLVTools_ggomnbd_nocov_LL_sum", (DL_FUNC) &_CLVTools_ggomnbd_nocov_LL_sum, 4},
    {"_CLVTools_ggomnbd_staticcov_LL_ind", (DL_FUNC) &_CLVTools_ggomnbd_staticcov_LL_ind, 6},
    {"_CLVTools_ggomnbd_staticcov_LL_sum", (DL_FUNC) &_CLVTools_ggomnbd_staticcov_LL_sum, 6},
    {"_CLVTools_ggomnbd_staticcov_alpha_i", (DL_FUNC) &_CLVTools_ggomnbd_staticcov_alpha_i, 3},
    {"_CLVTools_ggomnbd_staticcov_beta_i", (DL_FUNC) &_CLVTools_ggomnbd_staticcov_beta_i, 3},
    {"_CLVTools_ggomnbd_staticcov_PAlive", (DL_FUNC) &_CLVTools_ggomnbd_staticcov_PAlive, 12},
    {"_CLVTools_ggomnbd_nocov_PAlive", (DL_FUNC) &_CLVTools_ggomnbd_nocov_PAlive, 8},
    {"_CLVTools_pnbd_nocov_CET", (DL_FUNC) &_CLVTools_pnbd_nocov_CET, 8},
    {"_CLVTools_pnbd_staticcov_CET", (DL_FUNC) &_CLVTools_pnbd_staticcov_CET, 12},
    {"_CLVTools_pnbd_nocov_DERT", (DL_FUNC) &_CLVTools_pnbd_nocov_DERT, 8},
    {"_CLVTools_pnbd_staticcov_DERT", (DL_FUNC) &_CLVTools_pnbd_staticcov_DERT, 12},
    {"_CLVTools_pnbd_nocov_expectation", (DL_FUNC) &_CLVTools_pnbd_nocov_expectation, 5},
    {"_CLVTools_pnbd_staticcov_expectation", (DL_FUNC) &_CLVTools_pnbd_staticcov_expectation, 5},
    {"_CLVTools_pnbd_nocov_LL_ind", (DL_FUNC) &_CLVTools_pnbd_nocov_LL_ind, 4},
    {"_CLVTools_pnbd_nocov_LL_sum", (DL_FUNC) &_CLVTools_pnbd_nocov_LL_sum, 4},
    {"_CLVTools_pnbd_staticcov_LL_ind", (DL_FUNC) &_CLVTools_pnbd_staticcov_LL_ind, 6},
    {"_CLVTools_pnbd_staticcov_LL_sum", (DL_FUNC) &_CLVTools_pnbd_staticcov_LL_sum, 6},
    {"_CLVTools_pnbd_staticcov_alpha_i", (DL_FUNC) &_CLVTools_pnbd_staticcov_alpha_i, 3},
    {"_CLVTools_pnbd_staticcov_beta_i", (DL_FUNC) &_CLVTools_pnbd_staticcov_beta_i, 3},
    {"_CLVTools_pnbd_nocov_PAlive", (DL_FUNC) &_CLVTools_pnbd_nocov_PAlive, 7},
    {"_CLVTools_pnbd_staticcov_PAlive", (DL_FUNC) &_CLVTools_pnbd_staticcov_PAlive, 11},
    {"_CLVTools_pnbd_nocov_PMF", (DL_FUNC) &_CLVTools_pnbd_nocov_PMF, 6},
    {"_CLVTools_pnbd_staticcov_PMF", (DL_FUNC) &_CLVTools_pnbd_staticcov_PMF, 6},
    {"_CLVTools_pnbd_dyncov_LL_Bi_cpp", (DL_FUNC) &_CLVTools_pnbd_dyncov_LL_Bi_cpp, 7},
    {"_CLVTools_pnbd_dyncov_LL_Di_cpp", (DL_FUNC) &_CLVTools_pnbd_dyncov_LL_Di_cpp, 10},
    {"_CLVTools_hyp_alpha_ge_beta_cpp", (DL_FUNC) &_CLVTools_hyp_alpha_ge_beta_cpp, 7},
    {"_CLVTools_hyp_beta_g_alpha_cpp", (DL_FUNC) &_CLVTools_hyp_beta_g_alpha_cpp, 7},
    {"_CLVTools_F2_3_vecs_cpp", (DL_FUNC) &_CLVTools_F2_3_vecs_cpp, 23},
    {NULL, NULL, 0}
};

RcppExport void R_init_CLVTools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
